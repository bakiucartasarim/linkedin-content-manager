// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  role        Role     @default(USER)
  companyId   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  company     Company? @relation(fields: [companyId], references: [id])
  posts       Post[]
  n8nCredentials N8NCredentials?

  @@map("users")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  domain    String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  users     User[]

  @@map("companies")
}

model Post {
  id           String      @id @default(cuid())
  userId       String
  content      String?     @db.Text
  imageUrl     String?
  status       PostStatus  @default(DRAFT)
  publishType  PublishType @default(IMMEDIATE)
  scheduledFor DateTime?
  publishedAt  DateTime?
  linkedinPostId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  // Relations
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("posts")
}

model N8NCredentials {
  id             String   @id @default(cuid())
  userId         String   @unique
  linkedinToken  String
  n8nWebhookUrl  String
  n8nApiKey      String?
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("n8n_credentials")
}

enum Role {
  USER
  ADMIN
  COMPANY_ADMIN
}

enum PostStatus {
  DRAFT
  SCHEDULED
  PUBLISHED
  FAILED
}

enum PublishType {
  IMMEDIATE
  SCHEDULED
}