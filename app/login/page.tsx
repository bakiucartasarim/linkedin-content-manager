'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport Link from 'next/link'\nimport { useForm } from 'react-hook-form'\nimport toast from 'react-hot-toast'\nimport { Eye, EyeOff, Linkedin, Loader2 } from 'lucide-react'\n\ninterface LoginForm {\n  email: string\n  password: string\n}\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginForm>()\n\n  const onSubmit = async (data: LoginForm) => {\n    setIsLoading(true)\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      const result = await response.json()\n\n      if (response.ok) {\n        toast.success('Giriş başarılı!')\n        router.push('/dashboard')\n      } else {\n        toast.error(result.error || 'Giriş yapılamadı')\n      }\n    } catch (error) {\n      toast.error('Bir hata oluştu')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-linkedin-50 to-white flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"bg-linkedin-600 p-3 rounded-full\">\n              <Linkedin className=\"h-8 w-8 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">Hoş Geldiniz</h2>\n          <p className=\"mt-2 text-gray-600\">\n            LinkedIn Content Manager hesabınıza giriş yapın\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                E-posta\n              </label>\n              <input\n                {...register('email', {\n                  required: 'E-posta adresi gerekli',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Geçerli bir e-posta adresi girin',\n                  },\n                })}\n                type=\"email\"\n                className=\"input mt-1\"\n                placeholder=\"ornek@firma.com\"\n              />\n              {errors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Şifre\n              </label>\n              <div className=\"relative mt-1\">\n                <input\n                  {...register('password', {\n                    required: 'Şifre gerekli',\n                    minLength: {\n                      value: 6,\n                      message: 'Şifre en az 6 karakter olmalı',\n                    },\n                  })}\n                  type={showPassword ? 'text' : 'password'}\n                  className=\"input pr-10\"\n                  placeholder=\"••••••••\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"btn-primary w-full flex items-center justify-center\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Giriş yapılıyor...\n                </>\n              ) : (\n                'Giriş Yap'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Hesabınız yok mu?{' '}\n              <Link href=\"/register\" className=\"text-linkedin-600 hover:text-linkedin-700 font-medium\">\n                Kayıt olun\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}"